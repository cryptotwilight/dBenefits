export default ({
  "DBPaymentToken": {
    "abi": [
      {
        "inputs": [
          {
            "internalType": "string",
            "name": "name_",
            "type": "string"
          },
          {
            "internalType": "string",
            "name": "symbol_",
            "type": "string"
          },
          {
            "internalType": "uint8",
            "name": "decimals_",
            "type": "uint8"
          }
        ],
        "stateMutability": "nonpayable",
        "type": "constructor"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": true,
            "internalType": "address",
            "name": "owner",
            "type": "address"
          },
          {
            "indexed": true,
            "internalType": "address",
            "name": "spender",
            "type": "address"
          },
          {
            "indexed": false,
            "internalType": "uint256",
            "name": "value",
            "type": "uint256"
          }
        ],
        "name": "Approval",
        "type": "event"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": true,
            "internalType": "address",
            "name": "from",
            "type": "address"
          },
          {
            "indexed": true,
            "internalType": "address",
            "name": "to",
            "type": "address"
          },
          {
            "indexed": false,
            "internalType": "uint256",
            "name": "value",
            "type": "uint256"
          }
        ],
        "name": "Transfer",
        "type": "event"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "owner",
            "type": "address"
          },
          {
            "internalType": "address",
            "name": "spender",
            "type": "address"
          }
        ],
        "name": "allowance",
        "outputs": [
          {
            "internalType": "uint256",
            "name": "",
            "type": "uint256"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "spender",
            "type": "address"
          },
          {
            "internalType": "uint256",
            "name": "amount",
            "type": "uint256"
          }
        ],
        "name": "approve",
        "outputs": [
          {
            "internalType": "bool",
            "name": "",
            "type": "bool"
          }
        ],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "account",
            "type": "address"
          }
        ],
        "name": "balanceOf",
        "outputs": [
          {
            "internalType": "uint256",
            "name": "",
            "type": "uint256"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "decimals",
        "outputs": [
          {
            "internalType": "uint8",
            "name": "",
            "type": "uint8"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "spender",
            "type": "address"
          },
          {
            "internalType": "uint256",
            "name": "subtractedValue",
            "type": "uint256"
          }
        ],
        "name": "decreaseAllowance",
        "outputs": [
          {
            "internalType": "bool",
            "name": "",
            "type": "bool"
          }
        ],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "spender",
            "type": "address"
          },
          {
            "internalType": "uint256",
            "name": "addedValue",
            "type": "uint256"
          }
        ],
        "name": "increaseAllowance",
        "outputs": [
          {
            "internalType": "bool",
            "name": "",
            "type": "bool"
          }
        ],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "_to",
            "type": "address"
          },
          {
            "internalType": "uint256",
            "name": "_amount",
            "type": "uint256"
          }
        ],
        "name": "mint",
        "outputs": [
          {
            "internalType": "bool",
            "name": "",
            "type": "bool"
          }
        ],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "name",
        "outputs": [
          {
            "internalType": "string",
            "name": "",
            "type": "string"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "symbol",
        "outputs": [
          {
            "internalType": "string",
            "name": "",
            "type": "string"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "totalSupply",
        "outputs": [
          {
            "internalType": "uint256",
            "name": "",
            "type": "uint256"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "to",
            "type": "address"
          },
          {
            "internalType": "uint256",
            "name": "amount",
            "type": "uint256"
          }
        ],
        "name": "transfer",
        "outputs": [
          {
            "internalType": "bool",
            "name": "",
            "type": "bool"
          }
        ],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "from",
            "type": "address"
          },
          {
            "internalType": "address",
            "name": "to",
            "type": "address"
          },
          {
            "internalType": "uint256",
            "name": "amount",
            "type": "uint256"
          }
        ],
        "name": "transferFrom",
        "outputs": [
          {
            "internalType": "bool",
            "name": "",
            "type": "bool"
          }
        ],
        "stateMutability": "nonpayable",
        "type": "function"
      }
    ],
    "metadata": {
      "optimizer_settings": "M3B3",
      "solc_metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"decimals_\",\"type\":\"uint8\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/dbenefits/contracts/core/DBPaymentToken.sol\":\"DBPaymentToken\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"/dbenefits/contracts/core/DBPaymentToken.sol\":{\"keccak256\":\"0x4434afc1963f968b83ab649f999f400fecca8db3ef09197145815c0e222fe621\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://640fa0a4e740b6e0e0c0e47d0e5a8baabe4158a28e5659ec0fde29c8a8fca27d\",\"dweb:/ipfs/QmSfa6cPCBiT86PaSWxe2CDZ3SkzZsBHCV6hrK9ZcHq4D1\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xa56ca923f70c1748830700250b19c61b70db9a683516dc5e216694a50445d99c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cac938788bc4be12101e59d45588b4e059579f4e61062e1cda8d6b06c0191b15\",\"dweb:/ipfs/QmV2JKCyjTVH3rkWNrfdJRhAT7tZ3usAN2XcnD4h53Mvih\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
      "zk_version": "1.3.11"
    },
    "evm": {
      "legacyAssembly": null,
      "assembly": "\t.text\n\t.file\t\"DBPaymentToken.sol:DBPaymentToken\"\n\t.globl\t__entry\n__entry:\n.func_begin0:\n\tnop\tstack+=[9]\n\tptr.add\tr1, r0, stack[@ptr_calldata]\n\tshr.s\t96, r1, r1\n\tand\t@CPI0_0[0], r1, stack[@calldatasize]\n\tadd\t128, r0, r1\n\tst.1\t64, r1\n\tand!\t1, r2, r1\n\tjump.ne\t@.BB0_1\n\tadd\tstack[@calldatasize], r0, r1\n\tsub.s!\t4, r1, r1\n\tjump.lt\t@.BB0_2\n\tptr.add\tstack[@ptr_calldata], r0, r1\n\tld\tr1, r1\n\tshr.s\t224, r1, r1\n\tsub.s!\t@CPI0_5[0], r1, r2\n\tjump.gt\t@.BB0_77\n\tsub.s!\t@CPI0_13[0], r1, r2\n\tjump.gt\t@.BB0_74\n\tsub.s!\t@CPI0_17[0], r1, r2\n\tjump.eq\t@.BB0_84\n\tsub.s!\t@CPI0_18[0], r1, r2\n\tjump.eq\t@.BB0_95\n\tsub.s!\t@CPI0_19[0], r1, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI0_2[0], r0, r2\n\tsub.s!\t0, r1, r3\n\tadd\t0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI0_2[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.le\t0, r0, r2\n\tsub.s!\t@CPI0_2[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tadd\t2, r0, r1\n\tsload\tr1, r1\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_21[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_1:\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tadd\tstack[@calldatasize], r0, r2\n\tadd\t31, r2, r1\n\tsub.s\t32, r0, r10\n\tand\tr1, r10, r4\n\tld.1\t64, r1\n\tadd\tr4, r1, r3\n\tsub!\tr3, r4, r4\n\tadd\t0, r0, r4\n\tadd.lt\t1, r0, r4\n\tsub.s!\t@CPI0_1[0], r3, r5\n\tjump.gt\t@.BB0_5\n\tand!\t1, r4, r4\n\tjump.ne\t@.BB0_5\n\tst.1\t64, r3\n\tand\t31, r2, r3\n\tptr.add\tstack[@ptr_calldata], r0, r4\n\tshr.s!\t5, r2, r5\n\tjump.eq\t@.BB0_171\n\tadd\tr0, r0, r6\n.BB0_8:\n\tshl.s\t5, r6, r7\n\tadd\tr1, r7, r8\n\tptr.add\tr4, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_8\n.BB0_171:\n\tsub.s!\t0, r3, r6\n\tjump.eq\t@.BB0_10\n\tshl.s\t5, r5, r5\n\tptr.add\tr4, r5, r4\n\tadd\tr1, r5, r5\n\tshl.s\t3, r3, r3\n\tld.1\tr5, r6\n\tshl\tr6, r3, r6\n\tshr\tr6, r3, r6\n\tld\tr4, r4\n\tsub\t256, r3, r3\n\tshr\tr4, r3, r4\n\tshl\tr4, r3, r3\n\tor\tr3, r6, r3\n\tst.1\tr5, r3\n.BB0_10:\n\tadd\t@CPI0_2[0], r0, r3\n\tsub.s!\t96, r2, r4\n\tadd\t0, r0, r4\n\tadd.lt\tr3, r0, r4\n\tand\t@CPI0_2[0], r2, r5\n\tsub.s!\t0, r5, r6\n\tadd.le\t0, r0, r3\n\tsub.s!\t@CPI0_2[0], r5, r5\n\tadd.ne\tr4, r0, r3\n\tsub.s!\t0, r3, r3\n\tjump.ne\t@.BB0_2\n\tld.1.inc\tr1, r4, r3\n\tsub.s!\t@CPI0_1[0], r4, r5\n\tjump.gt\t@.BB0_2\n\tadd\tr1, r2, r2\n\tadd\tr4, r1, r4\n\tadd\t31, r4, r5\n\tadd\t@CPI0_2[0], r0, r6\n\tsub!\tr5, r2, r7\n\tadd\t0, r0, r7\n\tadd.ge\tr6, r0, r7\n\tand\t@CPI0_2[0], r5, r5\n\tand\t@CPI0_2[0], r2, r8\n\tsub!\tr5, r8, r9\n\tadd.ge\t0, r0, r6\n\txor\tr5, r8, r5\n\tsub.s!\t@CPI0_2[0], r5, r5\n\tadd\tr7, r0, r5\n\tadd.eq\tr6, r0, r5\n\tsub.s!\t0, r5, r5\n\tjump.ne\t@.BB0_2\n\tld.1\tr4, r5\n\tsub.s!\t@CPI0_1[0], r5, r6\n\tjump.gt\t@.BB0_5\n\tadd\t63, r5, r6\n\tand\tr6, r10, r6\n\tld.1\t64, r11\n\tadd\tr11, r6, r6\n\tsub!\tr6, r11, r7\n\tadd\t0, r0, r7\n\tadd.lt\t1, r0, r7\n\tsub.s!\t@CPI0_1[0], r6, r8\n\tjump.gt\t@.BB0_5\n\tand!\t1, r7, r7\n\tjump.ne\t@.BB0_5\n\tst.1\t64, r6\n\tst.1.inc\tr11, r5, r12\n\tadd\t32, r5, r6\n\tadd\tr6, r4, r7\n\tsub!\tr7, r2, r7\n\tjump.gt\t@.BB0_2\n\tsub.s!\t0, r5, r7\n\tjump.eq\t@.BB0_20\n\tadd\tr0, r0, r7\n.BB0_19:\n\tadd\t32, r7, r7\n\tadd\tr7, r11, r8\n\tadd\tr7, r4, r9\n\tld.1\tr9, r9\n\tst.1\tr8, r9\n\tsub!\tr7, r5, r8\n\tjump.lt\t@.BB0_19\n.BB0_20:\n\tadd\tr11, r6, r4\n\tst.1\tr4, r0\n\tld.1\tr3, r3\n\tsub.s!\t@CPI0_1[0], r3, r4\n\tjump.gt\t@.BB0_2\n\tadd\tr3, r1, r3\n\tadd\t31, r3, r4\n\tadd\t@CPI0_2[0], r0, r5\n\tsub!\tr4, r2, r6\n\tadd\t0, r0, r6\n\tadd.ge\tr5, r0, r6\n\tand\t@CPI0_2[0], r4, r4\n\tand\t@CPI0_2[0], r2, r7\n\tsub!\tr4, r7, r8\n\tadd.ge\t0, r0, r5\n\txor\tr4, r7, r4\n\tsub.s!\t@CPI0_2[0], r4, r4\n\tadd\tr6, r0, r4\n\tadd.eq\tr5, r0, r4\n\tsub.s!\t0, r4, r4\n\tjump.ne\t@.BB0_2\n\tld.1\tr3, r4\n\tsub.s!\t@CPI0_1[0], r4, r5\n\tjump.gt\t@.BB0_5\n\tadd\t63, r4, r5\n\tand\tr5, r10, r5\n\tld.1\t64, r8\n\tadd\tr8, r5, r5\n\tsub!\tr5, r8, r6\n\tadd\t0, r0, r6\n\tadd.lt\t1, r0, r6\n\tsub.s!\t@CPI0_1[0], r5, r7\n\tjump.gt\t@.BB0_5\n\tand!\t1, r6, r6\n\tjump.ne\t@.BB0_5\n\tst.1\t64, r5\n\tst.1.inc\tr8, r4, r5\n\tadd\tr5, r0, stack-[8]\n\tadd\t32, r4, r5\n\tadd\tr5, r3, r6\n\tsub!\tr6, r2, r2\n\tjump.gt\t@.BB0_2\n\tadd\tr12, r0, stack-[6]\n\tadd\tr11, r0, stack-[9]\n\tadd\tr10, r0, stack-[7]\n\tsub.s!\t0, r4, r2\n\tjump.eq\t@.BB0_29\n\tadd\tr0, r0, r2\n.BB0_28:\n\tadd\t32, r2, r2\n\tadd\tr2, r8, r6\n\tadd\tr2, r3, r7\n\tld.1\tr7, r7\n\tst.1\tr6, r7\n\tsub!\tr2, r4, r6\n\tjump.lt\t@.BB0_28\n.BB0_29:\n\tadd\tr8, r5, r2\n\tst.1\tr2, r0\n\tadd\t64, r1, r1\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[5]\n\tsub.s!\t255, r1, r1\n\tadd\tstack-[9], r0, r1\n\tjump.gt\t@.BB0_2\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[4]\n\tsub.s!\t@CPI0_1[0], r1, r1\n\tjump.gt\t@.BB0_5\n\tadd\tr8, r0, stack-[1]\n\tadd\t3, r0, r1\n\tadd\tr1, r0, stack-[3]\n\tsload\tr1, r1\n\tand!\t1, r1, r2\n\tshr.s\t1, r1, r1\n\tand\t127, r1, r3\n\tadd.eq\tr3, r0, r1\n\tadd\tr1, r0, stack-[2]\n\tsub.s!\t31, r1, r1\n\tadd\t0, r0, r1\n\tadd.gt\t1, r0, r1\n\tand\t1, r1, r1\n\tsub!\tr2, r1, r1\n\tjump.ne\t@.BB0_32\n\tadd\tstack-[2], r0, r1\n\tsub.s!\t32, r1, r1\n\tjump.lt\t@.BB0_37\n\tadd\tstack-[3], r0, r1\n\tst.1\t0, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_3[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[4], r0, r3\n\tadd\t31, r3, r2\n\tshr.s\t5, r2, r2\n\tsub.s!\t32, r3, r3\n\tadd.lt\t0, r0, r2\n\tld\tr1, r3\n\tadd\tstack-[2], r0, r1\n\tadd\t31, r1, r1\n\tshr.s\t5, r1, r1\n\tadd\tr3, r1, r1\n\tadd\tr3, r2, r2\n\tsub!\tr2, r1, r3\n\tjump.ge\t@.BB0_37\n.BB0_38:\n\tsstore\tr2, r0\n\tadd\t1, r2, r2\n\tsub!\tr2, r1, r3\n\tjump.lt\t@.BB0_38\n.BB0_37:\n\tadd\tstack-[4], r0, r1\n\tsub.s!\t31, r1, r1\n\tjump.le\t@.BB0_47\n\tadd\tstack-[3], r0, r1\n\tst.1\t0, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_3[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tadd\tstack-[7], r0, r2\n\tadd\tstack-[9], r0, r6\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[4], r0, r3\n\tand!\tr3, r2, r3\n\tadd\t32, r0, r2\n\tld\tr1, r1\n\tjump.eq\t@.BB0_44\n\tadd\t32, r0, r2\n\tadd\tr0, r0, r4\n.BB0_43:\n\tadd\tr2, r6, r5\n\tld.1\tr5, r5\n\tsstore\tr1, r5\n\tadd\t32, r2, r2\n\tadd\t1, r1, r1\n\tadd\t32, r4, r4\n\tsub!\tr4, r3, r5\n\tjump.lt\t@.BB0_43\n.BB0_44:\n\tadd\tstack-[4], r0, r4\n\tsub!\tr3, r4, r3\n\tjump.ge\t@.BB0_46\n\tadd\tstack-[4], r0, r3\n\tshl.s\t3, r3, r3\n\tand\t248, r3, r3\n\tsub.s\t1, r0, r4\n\tshr\tr4, r3, r3\n\txor\tr3, r4, r3\n\tadd\tstack-[9], r0, r4\n\tadd\tr2, r4, r2\n\tld.1\tr2, r2\n\tand\tr2, r3, r2\n\tsstore\tr1, r2\n.BB0_46:\n\tadd\tstack-[4], r0, r1\n\tshl.s\t1, r1, r1\n\tor\t1, r1, r1\n\tjump\t@.BB0_39\n.BB0_77:\n\tsub.s!\t@CPI0_6[0], r1, r2\n\tjump.gt\t@.BB0_81\n\tsub.s!\t@CPI0_10[0], r1, r2\n\tjump.eq\t@.BB0_130\n\tsub.s!\t@CPI0_11[0], r1, r2\n\tjump.eq\t@.BB0_139\n\tsub.s!\t@CPI0_12[0], r1, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI0_2[0], r0, r2\n\tsub.s!\t0, r1, r3\n\tadd\t0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI0_2[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.le\t0, r0, r2\n\tsub.s!\t@CPI0_2[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tadd\t4, r0, r5\n\tsload\tr5, r4\n\tand!\t1, r4, r6\n\tshr.s\t1, r4, r1\n\tand\t127, r1, r2\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t31, r1, r2\n\tadd\t0, r0, r2\n\tadd.gt\t1, r0, r2\n\txor\tr4, r2, r2\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_32\n\tld.1\t64, r2\n\tst.1.inc\tr2, r1, r3\n\tsub.s!\t0, r6, r6\n\tjump.ne\t@.BB0_150\n\tsub.s\t256, r0, r5\n\tand\tr4, r5, r4\n\tst.1\tr3, r4\n\tsub.s!\t0, r1, r1\n\tadd\t32, r0, r4\n\tadd.eq\t0, r0, r4\n\tjump\t@.BB0_147\n.BB0_74:\n\tsub.s!\t@CPI0_14[0], r1, r2\n\tjump.eq\t@.BB0_102\n\tsub.s!\t@CPI0_15[0], r1, r2\n\tjump.eq\t@.BB0_119\n\tsub.s!\t@CPI0_16[0], r1, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI0_2[0], r0, r2\n\tsub.s!\t64, r1, r3\n\tadd\t0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI0_2[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.le\t0, r0, r2\n\tsub.s!\t@CPI0_2[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tadd\t4, r0, r1\n\tptr.add\tstack[@ptr_calldata], r1, r1\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[9]\n\tsub.s!\t@CPI0_20[0], r1, r1\n\tjump.gt\t@.BB0_2\n\tcontext.caller\tr1\n\tadd\tr1, r0, stack-[7]\n\tst.1\t0, r1\n\tadd\t1, r0, r1\n\tadd\tr1, r0, stack-[8]\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_22[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tadd\tstack-[9], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t36, r0, r1\n\tptr.add\tstack[@ptr_calldata], r1, r1\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[6]\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_22[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r1\n\tadd\tstack-[6], r0, r2\n\tadd\tr1, r2, r3\n\tsub!\tr3, r1, r1\n\tadd\t0, r0, r1\n\tadd.lt\t1, r0, r1\n\tand!\t1, r1, r1\n\tjump.ne\t@.BB0_128\n\tadd\tstack-[7], r0, r1\n\tadd\tstack-[9], r0, r2\n\tnear_call\tr0, @fun_approve, @DEFAULT_UNWIND\n\tld.1\t64, r1\n\tadd\tstack-[8], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_21[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_81:\n\tsub.s!\t@CPI0_7[0], r1, r2\n\tjump.eq\t@.BB0_154\n\tsub.s!\t@CPI0_8[0], r1, r2\n\tjump.eq\t@.BB0_162\n\tsub.s!\t@CPI0_9[0], r1, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI0_2[0], r0, r2\n\tsub.s!\t64, r1, r3\n\tadd\t0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI0_2[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.le\t0, r0, r2\n\tsub.s!\t@CPI0_2[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tptr.add\tstack[@ptr_calldata], r0, r2\n\tptr.add.s\t4, r2, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI0_20[0], r1, r3\n\tjump.gt\t@.BB0_2\n\tptr.add.s\t36, r2, r2\n\tld\tr2, r3\n\tsub.s!\t@CPI0_20[0], r3, r2\n\tjump.gt\t@.BB0_2\n\tst.1\t0, r1\n\tadd\t1, r0, r1\n\tst.1\t32, r1\n\tadd\t64, r0, r2\n\tadd\tr2, r0, stack-[9]\n\tadd\tr0, r0, r1\n\tadd\tr3, r0, stack-[8]\n\tnear_call\tr0, @__keccak256, @DEFAULT_UNWIND\n\tadd\tstack-[8], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\tr0, r0, r1\n\tadd\tstack-[9], r0, r2\n\tnear_call\tr0, @__keccak256, @DEFAULT_UNWIND\n\tsload\tr1, r1\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_21[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_84:\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI0_2[0], r0, r2\n\tsub.s!\t0, r1, r3\n\tadd\t0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI0_2[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.le\t0, r0, r2\n\tsub.s!\t@CPI0_2[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tadd\t3, r0, r3\n\tsload\tr3, r2\n\tand!\t1, r2, r4\n\tshr.s\t1, r2, r1\n\tand\t127, r1, r5\n\tadd\tr1, r0, r6\n\tadd.eq\tr5, r0, r6\n\tsub.s!\t31, r6, r5\n\tadd\t0, r0, r5\n\tadd.gt\t1, r0, r5\n\txor\tr2, r5, r5\n\tand!\t1, r5, r5\n\tjump.eq\t@.BB0_87\n.BB0_32:\n\tadd\t@CPI0_31[0], r0, r1\n\tst.1\t0, r1\n\tadd\t34, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI0_32[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_95:\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI0_2[0], r0, r2\n\tsub.s!\t64, r1, r3\n\tadd\t0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI0_2[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.le\t0, r0, r2\n\tsub.s!\t@CPI0_2[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tptr.add\tstack[@ptr_calldata], r0, r1\n\tptr.add.s\t4, r1, r2\n\tld\tr2, r2\n\tsub.s!\t@CPI0_20[0], r2, r3\n\tjump.gt\t@.BB0_2\n\tptr.add.s\t36, r1, r1\n\tld\tr1, r3\n\tcontext.caller\tr1\n\tnear_call\tr0, @fun_approve, @DEFAULT_UNWIND\n\tadd\t1, r0, r1\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_21[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_130:\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI0_2[0], r0, r2\n\tsub.s!\t64, r1, r3\n\tadd\t0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI0_2[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.le\t0, r0, r2\n\tsub.s!\t@CPI0_2[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tptr.add\tstack[@ptr_calldata], r0, r1\n\tptr.add.s\t4, r1, r2\n\tld\tr2, r4\n\tsub.s!\t@CPI0_20[0], r4, r2\n\tjump.gt\t@.BB0_2\n\tptr.add.s\t36, r1, r1\n\tld\tr1, r5\n\tsub.s!\t0, r4, r1\n\tjump.ne\t@.BB0_135\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI0_29[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t31, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI0_25[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_30[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_139:\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI0_2[0], r0, r2\n\tsub.s!\t32, r1, r3\n\tadd\t0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI0_2[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.le\t0, r0, r2\n\tsub.s!\t@CPI0_2[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tadd\t4, r0, r1\n\tptr.add\tstack[@ptr_calldata], r1, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI0_20[0], r1, r2\n\tjump.gt\t@.BB0_2\n\tst.1\t0, r1\n\tst.1\t32, r0\n\tadd\t64, r0, r2\n\tadd\tr0, r0, r1\n\tnear_call\tr0, @__keccak256, @DEFAULT_UNWIND\n\tsload\tr1, r1\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_21[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_102:\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI0_2[0], r0, r2\n\tsub.s!\t96, r1, r3\n\tadd\t0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI0_2[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.le\t0, r0, r2\n\tsub.s!\t@CPI0_2[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tptr.add\tstack[@ptr_calldata], r0, r1\n\tptr.add.s\t4, r1, r2\n\tld\tr2, r4\n\tsub.s!\t@CPI0_20[0], r4, r2\n\tjump.gt\t@.BB0_2\n\tptr.add.s\t36, r1, r2\n\tld\tr2, r2\n\tadd\tr2, r0, stack-[9]\n\tsub.s!\t@CPI0_20[0], r2, r2\n\tjump.gt\t@.BB0_2\n\tptr.add.s\t68, r1, r1\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[7]\n\tst.1\t0, r4\n\tadd\t1, r0, r1\n\tadd\tr1, r0, stack-[6]\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_22[0], r1, r1\n\tadd\t32784, r0, r2\n\tadd\tr4, r0, stack-[8]\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tcontext.caller\tr2\n\tadd\tr2, r0, stack-[5]\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_22[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[8], r0, r3\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r2\n\tsub.s\t1, r0, r1\n\tsub!\tr2, r1, r1\n\tjump.ne\t@.BB0_109\n.BB0_110:\n\tadd\tr3, r0, r1\n\tadd\tstack-[9], r0, r2\n\tadd\tstack-[7], r0, r3\n\tnear_call\tr0, @fun_transfer, @DEFAULT_UNWIND\n\tld.1\t64, r1\n\tadd\tstack-[6], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_21[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_119:\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI0_2[0], r0, r2\n\tsub.s!\t0, r1, r3\n\tadd\t0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI0_2[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.le\t0, r0, r2\n\tsub.s!\t@CPI0_2[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tadd\t5, r0, r1\n\tsload\tr1, r1\n\tand\t255, r1, r1\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_21[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_154:\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI0_2[0], r0, r2\n\tsub.s!\t64, r1, r3\n\tadd\t0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI0_2[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.le\t0, r0, r2\n\tsub.s!\t@CPI0_2[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tptr.add\tstack[@ptr_calldata], r0, r1\n\tptr.add.s\t4, r1, r2\n\tld\tr2, r2\n\tadd\tr2, r0, stack-[9]\n\tsub.s!\t@CPI0_20[0], r2, r2\n\tjump.gt\t@.BB0_2\n\tptr.add.s\t36, r1, r1\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[8]\n\tcontext.caller\tr1\n\tadd\tr1, r0, stack-[6]\n\tst.1\t0, r1\n\tadd\t1, r0, r1\n\tadd\tr1, r0, stack-[7]\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_22[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tadd\tstack-[9], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_22[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r1\n\tadd\tstack-[8], r0, r3\n\tsub!\tr1, r3, r2\n\tjump.ge\t@.BB0_161\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI0_23[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI0_24[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t37, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI0_25[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_26[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_162:\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI0_2[0], r0, r2\n\tsub.s!\t64, r1, r3\n\tadd\t0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI0_2[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.le\t0, r0, r2\n\tsub.s!\t@CPI0_2[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tptr.add\tstack[@ptr_calldata], r0, r1\n\tptr.add.s\t4, r1, r2\n\tld\tr2, r2\n\tsub.s!\t@CPI0_20[0], r2, r3\n\tjump.le\t@.BB0_165\n.BB0_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_87:\n\tst.1\t128, r6\n\tsub.s!\t0, r4, r4\n\tjump.ne\t@.BB0_90\n\tsub.s\t256, r0, r3\n\tand\tr2, r3, r2\n\tst.1\t160, r2\n\tsub.s!\t0, r6, r1\n\tadd\t192, r0, r1\n\tadd.eq\t160, r0, r1\n\tjump\t@.BB0_88\n.BB0_165:\n\tptr.add.s\t36, r1, r1\n\tld\tr1, r3\n\tcontext.caller\tr1\n\tnear_call\tr0, @fun_transfer, @DEFAULT_UNWIND\n\tadd\t1, r0, r1\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_21[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_150:\n\tst.1\t0, r5\n\tsub.s!\t0, r1, r4\n\tadd\tr0, r0, r4\n\tjump.eq\t@.BB0_147\n\tadd\t@CPI0_27[0], r0, r5\n\tadd\tr0, r0, r4\n.BB0_152:\n\tadd\tr3, r4, r6\n\tsload\tr5, r7\n\tst.1\tr6, r7\n\tadd\t1, r5, r5\n\tadd\t32, r4, r4\n\tsub!\tr4, r1, r6\n\tjump.lt\t@.BB0_152\n.BB0_147:\n\tadd\t63, r4, r1\n\tsub.s\t32, r0, r3\n\tand\tr1, r3, r3\n\tadd\tr3, r2, r1\n\tsub!\tr1, r3, r3\n\tadd\t0, r0, r4\n\tadd.lt\t1, r0, r4\n\tsub.s!\t@CPI0_1[0], r1, r3\n\tjump.gt\t@.BB0_5\n\tand!\t1, r4, r3\n\tjump.ne\t@.BB0_5\n\tst.1\t64, r1\n\tadd\tr1, r0, stack-[9]\n\tnear_call\tr0, @abi_encode_string, @DEFAULT_UNWIND\n\tadd\tstack-[9], r0, r4\n\tsub\tr1, r4, r1\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd.lt\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_135:\n\tadd\t2, r0, r1\n\tsload\tr1, r3\n\tadd\tr3, r5, r2\n\tsub!\tr2, r3, r3\n\tadd\t0, r0, r3\n\tadd.lt\t1, r0, r3\n\tand!\t1, r3, r3\n\tjump.eq\t@.BB0_136\n.BB0_128:\n\tadd\t@CPI0_31[0], r0, r1\n\tst.1\t0, r1\n\tadd\t17, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI0_32[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_90:\n\tst.1\t0, r3\n\tadd\t160, r0, r1\n\tsub.s!\t0, r6, r2\n\tjump.eq\t@.BB0_94\n\tadd\t@CPI0_39[0], r0, r2\n\tadd\tr0, r0, r4\n.BB0_92:\n\tadd\tr4, r0, r3\n\tsload\tr2, r4\n\tadd\t160, r3, r5\n\tst.1\tr5, r4\n\tadd\t1, r2, r2\n\tadd\t32, r3, r4\n\tsub!\tr4, r6, r5\n\tjump.lt\t@.BB0_92\n\tadd\t192, r3, r1\n.BB0_88:\n\tadd\t31, r1, r1\n\tsub.s\t32, r0, r2\n\tand\tr1, r2, r1\n\tadd\t@CPI0_40[0], r1, r2\n\tsub.s!\t@CPI0_41[0], r2, r2\n\tjump.ge\t@.BB0_94\n.BB0_5:\n\tadd\t@CPI0_31[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI0_32[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_94:\n\tadd\tr1, r0, stack-[9]\n\tst.1\t64, r1\n\tadd\t128, r0, r2\n\tnear_call\tr0, @abi_encode_string, @DEFAULT_UNWIND\n\tadd\tstack-[9], r0, r4\n\tsub\tr1, r4, r1\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd.lt\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_136:\n\tadd\tr5, r0, stack-[8]\n\tsstore\tr1, r2\n\tst.1\t0, r4\n\tst.1\t32, r0\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_22[0], r1, r1\n\tadd\t32784, r0, r2\n\tadd\tr4, r0, stack-[9]\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[9], r0, r6\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r2\n\tadd\tstack-[8], r0, r3\n\tadd\tr2, r3, r2\n\tsstore\tr1, r2\n\tld.1\t64, r1\n\tst.1\tr1, r3\n\tadd\t@CPI0_0[0], r0, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI0_0[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_3[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI0_28[0], r0, r4\n\tadd\tr0, r0, r5\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_2\n\tld.1\t64, r1\n\tadd\t1, r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_21[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_161:\n\tsub\tr1, r3, r3\n\tadd\tstack-[6], r0, r1\n\tadd\tstack-[9], r0, r2\n\tnear_call\tr0, @fun_approve, @DEFAULT_UNWIND\n\tld.1\t64, r1\n\tadd\tstack-[7], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_21[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_109:\n\tadd\tstack-[7], r0, r1\n\tsub!\tr2, r1, r1\n\tjump.ge\t@.BB0_112\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI0_38[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t29, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI0_25[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_30[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_112:\n\tadd\tr2, r0, stack-[4]\n\tsub.s!\t0, r3, r1\n\tjump.ne\t@.BB0_114\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI0_36[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI0_37[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t36, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI0_25[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_26[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_114:\n\tadd\tstack-[5], r0, r1\n\tand!\t@CPI0_20[0], r1, r1\n\tadd\tr1, r0, stack-[5]\n\tjump.ne\t@.BB0_116\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI0_34[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI0_35[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t34, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI0_25[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_26[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_116:\n\tadd\tstack-[8], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[6], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_22[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tadd\tstack-[5], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_22[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[4], r0, r3\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[7], r0, r2\n\tsub\tr3, r2, r2\n\tld\tr1, r1\n\tsstore\tr1, r2\n\tld.1\t64, r1\n\tst.1\tr1, r2\n\tadd\t@CPI0_0[0], r0, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI0_0[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_3[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI0_33[0], r0, r4\n\tadd\tstack-[8], r0, r5\n\tadd\tstack-[5], r0, r6\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tstack-[8], r0, r3\n\tand!\t1, r2, r1\n\tjump.ne\t@.BB0_110\n\tjump\t@.BB0_2\n.BB0_47:\n\tadd\tstack-[4], r0, r1\n\tsub.s!\t0, r1, r1\n\tadd\tr0, r0, r1\n\tjump.eq\t@.BB0_49\n\tadd\tstack-[6], r0, r1\n\tld.1\tr1, r1\n.BB0_49:\n\tadd\tstack-[4], r0, r4\n\tshl.s\t3, r4, r2\n\tsub.s\t1, r0, r3\n\tshr\tr3, r2, r2\n\txor\tr2, r3, r2\n\tand\tr1, r2, r1\n\tshl.s\t1, r4, r2\n\tor\tr1, r2, r1\n.BB0_39:\n\tadd\tstack-[3], r0, r2\n\tsstore\tr2, r1\n\tadd\tstack-[1], r0, r1\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[9]\n\tsub.s!\t@CPI0_1[0], r1, r1\n\tjump.gt\t@.BB0_5\n\tadd\t4, r0, r1\n\tadd\tr1, r0, stack-[6]\n\tsload\tr1, r1\n\tand!\t1, r1, r2\n\tshr.s\t1, r1, r2\n\tand\t127, r2, r3\n\tadd.eq\tr3, r0, r2\n\tadd\tr2, r0, stack-[4]\n\tsub.s!\t31, r2, r2\n\tadd\t0, r0, r2\n\tadd.gt\t1, r0, r2\n\txor\tr1, r2, r1\n\tand!\t1, r1, r1\n\tjump.ne\t@.BB0_32\n\tadd\tstack-[4], r0, r1\n\tsub.s!\t32, r1, r1\n\tjump.lt\t@.BB0_55\n\tadd\tstack-[6], r0, r1\n\tst.1\t0, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_3[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[9], r0, r3\n\tadd\t31, r3, r2\n\tshr.s\t5, r2, r2\n\tsub.s!\t32, r3, r3\n\tadd.lt\t0, r0, r2\n\tld\tr1, r3\n\tadd\tstack-[4], r0, r1\n\tadd\t31, r1, r1\n\tshr.s\t5, r1, r1\n\tadd\tr3, r1, r1\n\tadd\tr3, r2, r2\n\tsub!\tr2, r1, r3\n\tjump.ge\t@.BB0_55\n.BB0_56:\n\tsstore\tr2, r0\n\tadd\t1, r2, r2\n\tsub!\tr2, r1, r3\n\tjump.lt\t@.BB0_56\n.BB0_55:\n\tadd\tstack-[9], r0, r1\n\tsub.s!\t31, r1, r1\n\tjump.le\t@.BB0_65\n\tadd\tstack-[6], r0, r1\n\tst.1\t0, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_3[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tadd\tstack-[7], r0, r2\n\tadd\tstack-[1], r0, r6\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[9], r0, r3\n\tand!\tr3, r2, r3\n\tadd\t32, r0, r2\n\tld\tr1, r1\n\tjump.eq\t@.BB0_62\n\tadd\t32, r0, r2\n\tadd\tr0, r0, r4\n.BB0_61:\n\tadd\tr2, r6, r5\n\tld.1\tr5, r5\n\tsstore\tr1, r5\n\tadd\t32, r2, r2\n\tadd\t1, r1, r1\n\tadd\t32, r4, r4\n\tsub!\tr4, r3, r5\n\tjump.lt\t@.BB0_61\n.BB0_62:\n\tadd\tstack-[9], r0, r4\n\tsub!\tr3, r4, r3\n\tjump.ge\t@.BB0_64\n\tadd\tstack-[9], r0, r3\n\tshl.s\t3, r3, r3\n\tand\t248, r3, r3\n\tsub.s\t1, r0, r4\n\tshr\tr4, r3, r3\n\txor\tr3, r4, r3\n\tadd\tstack-[1], r0, r4\n\tadd\tr2, r4, r2\n\tld.1\tr2, r2\n\tand\tr2, r3, r2\n\tsstore\tr1, r2\n.BB0_64:\n\tadd\t1, r0, r1\n\tadd\tstack-[9], r0, r2\n\tshl.s\t1, r2, r2\n\tjump\t@.BB0_57\n.BB0_65:\n\tadd\tstack-[9], r0, r1\n\tsub.s!\t0, r1, r1\n\tadd\tr0, r0, r1\n\tjump.eq\t@.BB0_67\n\tadd\tstack-[8], r0, r1\n\tld.1\tr1, r1\n.BB0_67:\n\tadd\tstack-[9], r0, r4\n\tshl.s\t3, r4, r2\n\tsub.s\t1, r0, r3\n\tshr\tr3, r2, r2\n\txor\tr2, r3, r2\n\tand\tr1, r2, r2\n\tshl.s\t1, r4, r1\n.BB0_57:\n\tor\tr2, r1, r1\n\tadd\tstack-[6], r0, r2\n\tsstore\tr2, r1\n\tadd\t5, r0, r1\n\tsload\tr1, r2\n\tsub.s\t256, r0, r3\n\tand\tr2, r3, r2\n\tadd\tstack-[5], r0, r3\n\tand\t255, r3, r3\n\tor\tr2, r3, r2\n\tsstore\tr1, r2\n\tadd\t32, r0, r1\n\tst.2\t256, r1\n\tst.2\t288, r0\n\tadd\t@CPI0_4[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.func_end0:\n\n__keccak256:\n.func_begin1:\n\tadd\t@CPI1_0[0], r0, r3\n\tsub.s!\t@CPI1_0[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t64, r1, r1\n\tsub.s!\t@CPI1_0[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t96, r2, r2\n\tor\tr2, r1, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI1_0[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI1_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB1_2\n\tld\tr1, r1\n\tret\n.BB1_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end1:\n\nabi_encode_string:\n.func_begin2:\n\tadd\t32, r0, r3\n\tst.1.inc\tr1, r3, r4\n\tld.1\tr2, r3\n\tst.1\tr4, r3\n\tadd\t64, r1, r1\n\tsub.s!\t0, r3, r4\n\tjump.eq\t@.BB2_3\n\tadd\tr0, r0, r4\n.BB2_2:\n\tadd\tr1, r4, r5\n\tadd\t32, r4, r4\n\tadd\tr4, r2, r6\n\tld.1\tr6, r6\n\tst.1\tr5, r6\n\tsub!\tr4, r3, r5\n\tjump.lt\t@.BB2_2\n.BB2_3:\n\tadd\tr1, r3, r2\n\tst.1\tr2, r0\n\tadd\t31, r3, r2\n\tsub.s\t32, r0, r3\n\tand\tr2, r3, r2\n\tadd\tr1, r2, r1\n\tret\n.func_end2:\n\nfun_transfer:\n.func_begin3:\n\tnop\tstack+=[4]\n\tadd\tr3, r0, stack-[4]\n\tand!\t@CPI3_0[0], r1, r1\n\tjump.eq\t@.BB3_1\n\tand!\t@CPI3_0[0], r2, r2\n\tadd\tr2, r0, stack-[2]\n\tjump.eq\t@.BB3_3\n\tadd\tr1, r0, stack-[3]\n\tst.1\t0, r1\n\tst.1\t32, r0\n\tadd\t@CPI3_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI3_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI3_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB3_5\n\tld\tr1, r1\n\tsload\tr1, r2\n\tadd\tstack-[4], r0, r1\n\tadd\tr2, r0, stack-[1]\n\tsub!\tr2, r1, r1\n\tjump.lt\t@.BB3_7\n\tadd\tstack-[3], r0, r1\n\tst.1\t0, r1\n\tst.1\t32, r0\n\tadd\t@CPI3_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI3_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI3_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB3_5\n\tadd\tstack-[4], r0, r2\n\tadd\tstack-[1], r0, r3\n\tsub\tr3, r2, r2\n\tld\tr1, r1\n\tsstore\tr1, r2\n\tadd\tstack-[2], r0, r1\n\tst.1\t0, r1\n\tadd\t@CPI3_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI3_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI3_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB3_5\n\tld\tr1, r1\n\tsload\tr1, r2\n\tadd\tstack-[4], r0, r3\n\tadd\tr2, r3, r2\n\tsstore\tr1, r2\n\tld.1\t64, r1\n\tst.1\tr1, r3\n\tadd\t@CPI3_1[0], r0, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI3_1[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI3_1[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI3_3[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI3_4[0], r0, r4\n\tadd\tstack-[3], r0, r5\n\tadd\tstack-[2], r0, r6\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB3_5\n\tret\n.BB3_5:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB3_1:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI3_11[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI3_12[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t37, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI3_7[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI3_1[0], r0, r2\n\tsub.s!\t@CPI3_1[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI3_8[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB3_3:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI3_9[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI3_10[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t35, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI3_7[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI3_1[0], r0, r2\n\tsub.s!\t@CPI3_1[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI3_8[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB3_7:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI3_5[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI3_6[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t38, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI3_7[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI3_1[0], r0, r2\n\tsub.s!\t@CPI3_1[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI3_8[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end3:\n\nfun_approve:\n.func_begin4:\n\tnop\tstack+=[3]\n\tand!\t@CPI4_0[0], r1, r1\n\tjump.eq\t@.BB4_1\n\tadd\tr3, r0, stack-[2]\n\tand!\t@CPI4_0[0], r2, r2\n\tadd\tr2, r0, stack-[3]\n\tjump.eq\t@.BB4_3\n\tadd\tr1, r0, stack-[1]\n\tst.1\t0, r1\n\tadd\t1, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI4_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI4_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI4_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tadd\tstack-[3], r0, r4\n\tjump.eq\t@.BB4_5\n\tld\tr1, r1\n\tst.1\t0, r4\n\tst.1\t32, r1\n\tadd\t@CPI4_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI4_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI4_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[3], r0, r6\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB4_5\n\tld\tr1, r1\n\tadd\tstack-[2], r0, r2\n\tsstore\tr1, r2\n\tld.1\t64, r1\n\tst.1\tr1, r2\n\tadd\t@CPI4_1[0], r0, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI4_1[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI4_1[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI4_3[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI4_4[0], r0, r4\n\tadd\tstack-[1], r0, r5\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB4_5\n\tret\n.BB4_5:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB4_1:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI4_9[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI4_10[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t36, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI4_7[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI4_1[0], r0, r2\n\tsub.s!\t@CPI4_1[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI4_8[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB4_3:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI4_5[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI4_6[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t34, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI4_7[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI4_1[0], r0, r2\n\tsub.s!\t@CPI4_1[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI4_8[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end4:\n\n__farcall:\n.func_begin5:\n.tmp0:\n\tfar_call\tr1, r2, @.BB5_2\n.tmp1:\n\tadd\t1, r0, r2\n\tret\n.BB5_2:\n.tmp2:\n\tadd\tr0, r0, r2\n\tret\n.func_end5:\n\n__staticcall:\n.func_begin6:\n.tmp3:\n\tfar_call.static\tr1, r2, @.BB6_2\n.tmp4:\n\tadd\t1, r0, r2\n\tret\n.BB6_2:\n.tmp5:\n\tadd\tr0, r0, r2\n\tret\n.func_end6:\n\n\t.data\n\t.p2align\t5\ncalldatasize:\n\t.cell 0\n\n\t.p2align\t5\nptr_calldata:\n.cell\t0\n\n\t.note.GNU-stack\n\t.rodata\nCPI0_0:\nCPI1_0:\nCPI3_1:\nCPI4_1:\n\t.cell 4294967295\nCPI0_1:\n\t.cell 18446744073709551615\nCPI0_2:\n\t.cell -57896044618658097711785492504343953926634992332820282019728792003956564819968\nCPI0_3:\nCPI3_3:\nCPI4_3:\n\t.cell 904625697166532776746648320380374280103671757735618107014721178055227736064\nCPI0_4:\n\t.cell 53919893334301279589334030174039261352344891250716429051063678533632\nCPI0_5:\n\t.cell 1086394136\nCPI0_6:\n\t.cell 2757214934\nCPI0_7:\n\t.cell 2757214935\nCPI0_8:\n\t.cell 2835717307\nCPI0_9:\n\t.cell 3714247998\nCPI0_10:\n\t.cell 1086394137\nCPI0_11:\n\t.cell 1889567281\nCPI0_12:\n\t.cell 2514000705\nCPI0_13:\n\t.cell 599290588\nCPI0_14:\n\t.cell 599290589\nCPI0_15:\n\t.cell 826074471\nCPI0_16:\n\t.cell 961581905\nCPI0_17:\n\t.cell 117300739\nCPI0_18:\n\t.cell 157198259\nCPI0_19:\n\t.cell 404098525\nCPI0_20:\nCPI3_0:\nCPI4_0:\n\t.cell 1461501637330902918203684832716283019655932542975\nCPI0_21:\n\t.cell 2535301200456458802993406410752\nCPI0_22:\nCPI3_2:\nCPI4_2:\n\t.cell 904625697166532776746648320380374280103671760270919307471179981048634146816\nCPI0_23:\n\t.cell 14690266658072097593480850647027335513285713462661904985951319567533531463680\nCPI0_24:\n\t.cell 31354931781638678506476475496475743842680577777870365728514456330491174612855\nCPI0_25:\nCPI3_7:\nCPI4_7:\n\t.cell 3963877391197344453575983046348115674221700746820753546331534351508065746944\nCPI0_26:\nCPI3_8:\nCPI4_8:\n\t.cell 10458117451882892562347801444352\nCPI0_27:\n\t.cell -53278079350709166316280423202849322519190186591071851114874353210178472783461\nCPI0_28:\nCPI3_4:\n\t.cell -15402802100530019096323380498944738953123845089667699673314898783681816316945\nCPI0_29:\n\t.cell 31354931781638678563069525067809233856775101976563302031013534919694566519552\nCPI0_30:\n\t.cell 7922816251426433759354395033600\nCPI0_31:\n\t.cell 35408467139433450592217433187231851964531694900788300625387963629091585785856\nCPI0_32:\n\t.cell 2852213850513516153367582212096\nCPI0_33:\nCPI4_4:\n\t.cell -52305948261162578668367882225327028569797882979485679342215860919519743330011\nCPI0_34:\nCPI4_5:\n\t.cell 52219164999525148860834357634456956735281286572158918307284071279203377479680\nCPI0_35:\nCPI4_6:\n\t.cell 31354931781638678487916134672869638488806705378895508030211234510262059168357\nCPI0_36:\nCPI4_9:\n\t.cell 51742913093258732729005998692887265601192425265805909375210916622055285719040\nCPI0_37:\nCPI4_10:\n\t.cell 31354931781638678487916134672869638484047149969764982831501014746446650500196\nCPI0_38:\n\t.cell 31354931781638678538084197150757782427756587561754988975511141185730285404160\nCPI0_39:\n\t.cell -27889059366240281169193357100633332908378892778709981755071813198463099602853\nCPI0_40:\n\t.cell -18446744073709551616\nCPI0_41:\n\t.cell -18446744073709551488\nCPI1_1:\n\t.cell 904625697166532776746648320380374280103671755200316906558262375061821325312\nCPI3_5:\n\t.cell 44065838241030143116324720188876985940908656145555552347773292252211112312832\nCPI3_6:\n\t.cell 31354931781638678607228669297131712859100820671745083778533502622993977909346\nCPI3_9:\n\t.cell 45887578820189300338443374388718498632482616163288499555830078344056365121536\nCPI3_10:\n\t.cell 31354931781638678607228669297131712859126084785867252355217498662940140921970\nCPI3_11:\n\t.cell 45433405612597180762055095701412804886438245671210399661410036396145969725440\nCPI3_12:\n\t.cell 31354931781638678607228669297131712859107492772550336241160036866987736981860\n",
      "bytecode": {
        "object": ""
      },
      "methodIdentifiers": {
        "allowance(address,address)": "dd62ed3e",
        "approve(address,uint256)": "095ea7b3",
        "balanceOf(address)": "70a08231",
        "decimals()": "313ce567",
        "decreaseAllowance(address,uint256)": "a457c2d7",
        "increaseAllowance(address,uint256)": "39509351",
        "mint(address,uint256)": "40c10f19",
        "name()": "06fdde03",
        "symbol()": "95d89b41",
        "totalSupply()": "18160ddd",
        "transfer(address,uint256)": "a9059cbb",
        "transferFrom(address,address,uint256)": "23b872dd"
      }
    },
    "irOptimized": "/// @use-src 0:\"/dbenefits/contracts/core/DBPaymentToken.sol\", 1:\"@openzeppelin/contracts/token/ERC20/ERC20.sol\", 2:\"@openzeppelin/contracts/token/ERC20/IERC20.sol\", 3:\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\", 4:\"@openzeppelin/contracts/utils/Context.sol\"\nobject \"DBPaymentToken_51\" {\n    code {\n        {\n            /// @src 0:122:581  \"contract DBPaymentToken is ERC20 {...\"\n            mstore(64, memoryguard(0x80))\n            if callvalue() { revert(0, 0) }\n            let programSize := datasize(\"DBPaymentToken_51\")\n            let argSize := sub(codesize(), programSize)\n            let memoryDataOffset := allocate_memory(argSize)\n            codecopy(memoryDataOffset, programSize, argSize)\n            let _1 := add(memoryDataOffset, argSize)\n            if slt(sub(_1, memoryDataOffset), 96)\n            {\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 0:122:581  \"contract DBPaymentToken is ERC20 {...\"\n            let offset := mload(memoryDataOffset)\n            let _2 := sub(shl(64, 1), 1)\n            if gt(offset, _2)\n            {\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 0:122:581  \"contract DBPaymentToken is ERC20 {...\"\n            let value0 := abi_decode_string_fromMemory(add(memoryDataOffset, offset), _1)\n            let _3 := 32\n            let offset_1 := mload(add(memoryDataOffset, _3))\n            if gt(offset_1, _2)\n            {\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 0:122:581  \"contract DBPaymentToken is ERC20 {...\"\n            let value1 := abi_decode_string_fromMemory(add(memoryDataOffset, offset_1), _1)\n            let value := mload(add(memoryDataOffset, 64))\n            let _4 := and(value, 0xff)\n            if iszero(eq(value, _4))\n            {\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 0:122:581  \"contract DBPaymentToken is ERC20 {...\"\n            let newLen := mload(value0)\n            if gt(newLen, _2)\n            {\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 0:122:581  \"contract DBPaymentToken is ERC20 {...\" */ shl(224, 0x4e487b71))\n                mstore(4, 0x41)\n                revert(/** @src -1:-1:-1 */ 0, /** @src 0:122:581  \"contract DBPaymentToken is ERC20 {...\" */ 0x24)\n            }\n            /// @src 1:2046:2059  \"_name = name_\"\n            let _5 := 0x03\n            /// @src 0:122:581  \"contract DBPaymentToken is ERC20 {...\"\n            let _6 := sload(/** @src 1:2046:2059  \"_name = name_\" */ _5)\n            /// @src 0:122:581  \"contract DBPaymentToken is ERC20 {...\"\n            let length := /** @src -1:-1:-1 */ 0\n            /// @src 0:122:581  \"contract DBPaymentToken is ERC20 {...\"\n            let _7 := 1\n            length := shr(_7, _6)\n            let outOfPlaceEncoding := and(_6, _7)\n            if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n            if eq(outOfPlaceEncoding, lt(length, _3))\n            {\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 0:122:581  \"contract DBPaymentToken is ERC20 {...\" */ shl(224, 0x4e487b71))\n                mstore(4, 0x22)\n                revert(/** @src -1:-1:-1 */ 0, /** @src 0:122:581  \"contract DBPaymentToken is ERC20 {...\" */ 0x24)\n            }\n            let _8 := 31\n            if gt(length, _8)\n            {\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 1:2046:2059  \"_name = name_\" */ _5)\n                /// @src 0:122:581  \"contract DBPaymentToken is ERC20 {...\"\n                let data := keccak256(/** @src -1:-1:-1 */ 0, /** @src 0:122:581  \"contract DBPaymentToken is ERC20 {...\" */ _3)\n                let deleteStart := add(data, shr(5, add(newLen, _8)))\n                if lt(newLen, _3) { deleteStart := data }\n                let _9 := add(data, shr(5, add(length, _8)))\n                let start := deleteStart\n                for { } lt(start, _9) { start := add(start, _7) }\n                {\n                    sstore(start, /** @src -1:-1:-1 */ 0)\n                }\n            }\n            /// @src 0:122:581  \"contract DBPaymentToken is ERC20 {...\"\n            let srcOffset := /** @src -1:-1:-1 */ 0\n            /// @src 0:122:581  \"contract DBPaymentToken is ERC20 {...\"\n            srcOffset := _3\n            switch gt(newLen, _8)\n            case 1 {\n                let loopEnd := and(newLen, not(31))\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 1:2046:2059  \"_name = name_\" */ _5)\n                /// @src 0:122:581  \"contract DBPaymentToken is ERC20 {...\"\n                let dstPtr := keccak256(/** @src -1:-1:-1 */ 0, /** @src 0:122:581  \"contract DBPaymentToken is ERC20 {...\" */ _3)\n                let i := /** @src -1:-1:-1 */ 0\n                /// @src 0:122:581  \"contract DBPaymentToken is ERC20 {...\"\n                for { } lt(i, loopEnd) { i := add(i, _3) }\n                {\n                    sstore(dstPtr, mload(add(value0, srcOffset)))\n                    dstPtr := add(dstPtr, _7)\n                    srcOffset := add(srcOffset, _3)\n                }\n                if lt(loopEnd, newLen)\n                {\n                    let lastValue := mload(add(value0, srcOffset))\n                    sstore(dstPtr, and(lastValue, not(shr(and(shl(/** @src 1:2046:2059  \"_name = name_\" */ _5, /** @src 0:122:581  \"contract DBPaymentToken is ERC20 {...\" */ newLen), 248), not(0)))))\n                }\n                sstore(/** @src 1:2046:2059  \"_name = name_\" */ _5, /** @src 0:122:581  \"contract DBPaymentToken is ERC20 {...\" */ add(shl(_7, newLen), _7))\n            }\n            default {\n                let value_1 := /** @src -1:-1:-1 */ 0\n                /// @src 0:122:581  \"contract DBPaymentToken is ERC20 {...\"\n                if newLen\n                {\n                    value_1 := mload(add(value0, srcOffset))\n                }\n                sstore(/** @src 1:2046:2059  \"_name = name_\" */ _5, /** @src 0:122:581  \"contract DBPaymentToken is ERC20 {...\" */ or(and(value_1, not(shr(shl(/** @src 1:2046:2059  \"_name = name_\" */ _5, /** @src 0:122:581  \"contract DBPaymentToken is ERC20 {...\" */ newLen), not(0)))), shl(_7, newLen)))\n            }\n            let newLen_1 := mload(value1)\n            if gt(newLen_1, _2)\n            {\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 0:122:581  \"contract DBPaymentToken is ERC20 {...\" */ shl(224, 0x4e487b71))\n                mstore(/** @src 1:2069:2086  \"_symbol = symbol_\" */ 0x04, /** @src 0:122:581  \"contract DBPaymentToken is ERC20 {...\" */ 0x41)\n                revert(/** @src -1:-1:-1 */ 0, /** @src 0:122:581  \"contract DBPaymentToken is ERC20 {...\" */ 0x24)\n            }\n            /// @src 1:2069:2086  \"_symbol = symbol_\"\n            let _10 := 0x04\n            /// @src 0:122:581  \"contract DBPaymentToken is ERC20 {...\"\n            let _11 := sload(/** @src 1:2069:2086  \"_symbol = symbol_\" */ _10)\n            /// @src 0:122:581  \"contract DBPaymentToken is ERC20 {...\"\n            let length_1 := /** @src -1:-1:-1 */ 0\n            /// @src 0:122:581  \"contract DBPaymentToken is ERC20 {...\"\n            length_1 := shr(_7, _11)\n            let outOfPlaceEncoding_1 := and(_11, _7)\n            if iszero(outOfPlaceEncoding_1)\n            {\n                length_1 := and(length_1, 0x7f)\n            }\n            if eq(outOfPlaceEncoding_1, lt(length_1, _3))\n            {\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 0:122:581  \"contract DBPaymentToken is ERC20 {...\" */ shl(224, 0x4e487b71))\n                mstore(/** @src 1:2069:2086  \"_symbol = symbol_\" */ _10, /** @src 0:122:581  \"contract DBPaymentToken is ERC20 {...\" */ 0x22)\n                revert(/** @src -1:-1:-1 */ 0, /** @src 0:122:581  \"contract DBPaymentToken is ERC20 {...\" */ 0x24)\n            }\n            if gt(length_1, _8)\n            {\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 1:2069:2086  \"_symbol = symbol_\" */ _10)\n                /// @src 0:122:581  \"contract DBPaymentToken is ERC20 {...\"\n                let data_1 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 0:122:581  \"contract DBPaymentToken is ERC20 {...\" */ _3)\n                let deleteStart_1 := add(data_1, shr(5, add(newLen_1, _8)))\n                if lt(newLen_1, _3) { deleteStart_1 := data_1 }\n                let _12 := add(data_1, shr(5, add(length_1, _8)))\n                let start_1 := deleteStart_1\n                for { } lt(start_1, _12) { start_1 := add(start_1, _7) }\n                {\n                    sstore(start_1, /** @src -1:-1:-1 */ 0)\n                }\n            }\n            /// @src 0:122:581  \"contract DBPaymentToken is ERC20 {...\"\n            let srcOffset_1 := /** @src -1:-1:-1 */ 0\n            /// @src 0:122:581  \"contract DBPaymentToken is ERC20 {...\"\n            srcOffset_1 := _3\n            switch gt(newLen_1, _8)\n            case 1 {\n                let loopEnd_1 := and(newLen_1, not(31))\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 1:2069:2086  \"_symbol = symbol_\" */ _10)\n                /// @src 0:122:581  \"contract DBPaymentToken is ERC20 {...\"\n                let dstPtr_1 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 0:122:581  \"contract DBPaymentToken is ERC20 {...\" */ _3)\n                let i_1 := /** @src -1:-1:-1 */ 0\n                /// @src 0:122:581  \"contract DBPaymentToken is ERC20 {...\"\n                for { } lt(i_1, loopEnd_1) { i_1 := add(i_1, _3) }\n                {\n                    sstore(dstPtr_1, mload(add(value1, srcOffset_1)))\n                    dstPtr_1 := add(dstPtr_1, _7)\n                    srcOffset_1 := add(srcOffset_1, _3)\n                }\n                if lt(loopEnd_1, newLen_1)\n                {\n                    let lastValue_1 := mload(add(value1, srcOffset_1))\n                    sstore(dstPtr_1, and(lastValue_1, not(shr(and(shl(/** @src 1:2046:2059  \"_name = name_\" */ _5, /** @src 0:122:581  \"contract DBPaymentToken is ERC20 {...\" */ newLen_1), 248), not(0)))))\n                }\n                sstore(/** @src 1:2069:2086  \"_symbol = symbol_\" */ _10, /** @src 0:122:581  \"contract DBPaymentToken is ERC20 {...\" */ add(shl(_7, newLen_1), _7))\n            }\n            default {\n                let value_2 := /** @src -1:-1:-1 */ 0\n                /// @src 0:122:581  \"contract DBPaymentToken is ERC20 {...\"\n                if newLen_1\n                {\n                    value_2 := mload(add(value1, srcOffset_1))\n                }\n                sstore(/** @src 1:2069:2086  \"_symbol = symbol_\" */ _10, /** @src 0:122:581  \"contract DBPaymentToken is ERC20 {...\" */ or(and(value_2, not(shr(shl(/** @src 1:2046:2059  \"_name = name_\" */ _5, /** @src 0:122:581  \"contract DBPaymentToken is ERC20 {...\" */ newLen_1), not(0)))), shl(_7, newLen_1)))\n            }\n            sstore(/** @src 0:326:347  \"_decimals = decimals_\" */ 0x05, /** @src 0:122:581  \"contract DBPaymentToken is ERC20 {...\" */ or(and(sload(/** @src 0:326:347  \"_decimals = decimals_\" */ 0x05), /** @src 0:122:581  \"contract DBPaymentToken is ERC20 {...\" */ not(255)), _4))\n            let _13 := mload(64)\n            let _14 := datasize(\"DBPaymentToken_51_deployed\")\n            codecopy(_13, dataoffset(\"DBPaymentToken_51_deployed\"), _14)\n            return(_13, _14)\n        }\n        function allocate_memory(size) -> memPtr\n        {\n            memPtr := mload(64)\n            let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n            if or(gt(newFreePtr, sub(shl(64, 1), 1)), lt(newFreePtr, memPtr))\n            {\n                mstore(0, shl(224, 0x4e487b71))\n                mstore(4, 0x41)\n                revert(0, 0x24)\n            }\n            mstore(64, newFreePtr)\n        }\n        function abi_decode_string_fromMemory(offset, end) -> array\n        {\n            if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n            let _1 := mload(offset)\n            if gt(_1, sub(shl(64, 1), 1))\n            {\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 0:122:581  \"contract DBPaymentToken is ERC20 {...\" */ shl(224, 0x4e487b71))\n                mstore(4, 0x41)\n                revert(/** @src -1:-1:-1 */ 0, /** @src 0:122:581  \"contract DBPaymentToken is ERC20 {...\" */ 0x24)\n            }\n            let _2 := 0x20\n            let array_1 := allocate_memory(add(and(add(_1, 0x1f), not(31)), _2))\n            mstore(array_1, _1)\n            if gt(add(add(offset, _1), _2), end)\n            {\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 0:122:581  \"contract DBPaymentToken is ERC20 {...\"\n            let i := /** @src -1:-1:-1 */ 0\n            /// @src 0:122:581  \"contract DBPaymentToken is ERC20 {...\"\n            for { } lt(i, _1) { i := add(i, _2) }\n            {\n                mstore(add(add(array_1, i), _2), mload(add(add(offset, i), _2)))\n            }\n            mstore(add(add(array_1, _1), _2), /** @src -1:-1:-1 */ 0)\n            /// @src 0:122:581  \"contract DBPaymentToken is ERC20 {...\"\n            array := array_1\n        }\n    }\n    /// @use-src 0:\"/dbenefits/contracts/core/DBPaymentToken.sol\", 1:\"@openzeppelin/contracts/token/ERC20/ERC20.sol\", 4:\"@openzeppelin/contracts/utils/Context.sol\"\n    object \"DBPaymentToken_51_deployed\" {\n        code {\n            {\n                /// @src 0:122:581  \"contract DBPaymentToken is ERC20 {...\"\n                let _1 := memoryguard(0x80)\n                let _2 := 64\n                mstore(_2, _1)\n                let _3 := 4\n                if iszero(lt(calldatasize(), _3))\n                {\n                    let _4 := 0\n                    switch shr(224, calldataload(_4))\n                    case 0x06fdde03 {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                        let ret := _4\n                        let slotValue := sload(/** @src 1:2244:2249  \"_name\" */ 0x03)\n                        /// @src 0:122:581  \"contract DBPaymentToken is ERC20 {...\"\n                        let length := _4\n                        let _5 := 1\n                        length := shr(_5, slotValue)\n                        let outOfPlaceEncoding := and(slotValue, _5)\n                        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n                        let _6 := 32\n                        if eq(outOfPlaceEncoding, lt(length, _6))\n                        {\n                            mstore(_4, shl(224, 0x4e487b71))\n                            mstore(_3, 0x22)\n                            revert(_4, 0x24)\n                        }\n                        mstore(_1, length)\n                        switch outOfPlaceEncoding\n                        case 0 {\n                            mstore(add(_1, _6), and(slotValue, not(255)))\n                            ret := add(add(_1, shl(5, iszero(iszero(length)))), _6)\n                        }\n                        case 1 {\n                            mstore(_4, /** @src 1:2244:2249  \"_name\" */ 0x03)\n                            /// @src 0:122:581  \"contract DBPaymentToken is ERC20 {...\"\n                            let dataPos := 87903029871075914254377627908054574944891091886930582284385770809450030037083\n                            let i := _4\n                            for { } lt(i, length) { i := add(i, _6) }\n                            {\n                                mstore(add(add(_1, i), _6), sload(dataPos))\n                                dataPos := add(dataPos, _5)\n                            }\n                            ret := add(add(_1, i), _6)\n                        }\n                        let newFreePtr := add(_1, and(add(sub(ret, _1), 31), not(31)))\n                        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, _1))\n                        {\n                            mstore(_4, shl(224, 0x4e487b71))\n                            mstore(_3, 0x41)\n                            revert(_4, 0x24)\n                        }\n                        mstore(_2, newFreePtr)\n                        return(newFreePtr, sub(abi_encode_string(newFreePtr, _1), newFreePtr))\n                    }\n                    case 0x095ea7b3 {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), _2) { revert(_4, _4) }\n                        let value0 := abi_decode_address_5566()\n                        /// @src 1:4606:4612  \"amount\"\n                        fun_approve(/** @src 4:719:729  \"msg.sender\" */ caller(), /** @src 1:4606:4612  \"amount\" */ value0, /** @src 0:122:581  \"contract DBPaymentToken is ERC20 {...\" */ calldataload(36))\n                        let memPos := mload(_2)\n                        mstore(memPos, 1)\n                        return(memPos, 32)\n                    }\n                    case 0x18160ddd {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                        let _7 := sload(/** @src 1:3342:3354  \"_totalSupply\" */ 0x02)\n                        /// @src 0:122:581  \"contract DBPaymentToken is ERC20 {...\"\n                        let memPos_1 := mload(_2)\n                        mstore(memPos_1, _7)\n                        return(memPos_1, 32)\n                    }\n                    case 0x23b872dd {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), 96) { revert(_4, _4) }\n                        let value0_1 := abi_decode_address_5566()\n                        let value1 := abi_decode_address()\n                        let value := calldataload(68)\n                        mstore(_4, and(value0_1, sub(shl(160, 1), 1)))\n                        mstore(32, 1)\n                        let _8 := keccak256(_4, _2)\n                        mstore(_4, /** @src 4:719:729  \"msg.sender\" */ caller())\n                        /// @src 0:122:581  \"contract DBPaymentToken is ERC20 {...\"\n                        mstore(32, _8)\n                        let _9 := sload(keccak256(_4, _2))\n                        /// @src 1:11240:11483  \"if (currentAllowance != type(uint256).max) {...\"\n                        if /** @src 1:11244:11281  \"currentAllowance != type(uint256).max\" */ iszero(eq(_9, /** @src 1:11264:11281  \"type(uint256).max\" */ not(0)))\n                        /// @src 1:11240:11483  \"if (currentAllowance != type(uint256).max) {...\"\n                        {\n                            /// @src 0:122:581  \"contract DBPaymentToken is ERC20 {...\"\n                            if /** @src 1:11305:11331  \"currentAllowance >= amount\" */ lt(_9, value)\n                            /// @src 0:122:581  \"contract DBPaymentToken is ERC20 {...\"\n                            {\n                                let memPtr := mload(_2)\n                                mstore(memPtr, shl(229, 4594637))\n                                mstore(add(memPtr, _3), 32)\n                                mstore(add(memPtr, 36), 29)\n                                mstore(add(memPtr, 68), \"ERC20: insufficient allowance\")\n                                revert(memPtr, 100)\n                            }\n                            /// @src 1:11432:11457  \"currentAllowance - amount\"\n                            fun_approve(value0_1, /** @src 4:719:729  \"msg.sender\" */ caller(), /** @src 0:122:581  \"contract DBPaymentToken is ERC20 {...\" */ sub(/** @src 1:11432:11457  \"currentAllowance - amount\" */ _9, value))\n                        }\n                        /// @src 1:5424:5430  \"amount\"\n                        fun_transfer(value0_1, value1, value)\n                        /// @src 0:122:581  \"contract DBPaymentToken is ERC20 {...\"\n                        let memPos_2 := mload(_2)\n                        mstore(memPos_2, 1)\n                        return(memPos_2, 32)\n                    }\n                    case 0x313ce567 {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                        let value_1 := and(sload(/** @src 0:563:572  \"_decimals\" */ 0x05), /** @src 0:122:581  \"contract DBPaymentToken is ERC20 {...\" */ 0xff)\n                        let memPos_3 := mload(_2)\n                        mstore(memPos_3, value_1)\n                        return(memPos_3, 32)\n                    }\n                    case 0x39509351 {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), _2) { revert(_4, _4) }\n                        let value0_2 := abi_decode_address_5566()\n                        mstore(_4, /** @src 4:719:729  \"msg.sender\" */ caller())\n                        /// @src 0:122:581  \"contract DBPaymentToken is ERC20 {...\"\n                        mstore(32, 1)\n                        let _10 := keccak256(_4, _2)\n                        mstore(_4, and(value0_2, sub(shl(160, 1), 1)))\n                        mstore(32, _10)\n                        /// @src 1:6021:6059  \"allowance(owner, spender) + addedValue\"\n                        fun_approve(/** @src 4:719:729  \"msg.sender\" */ caller(), /** @src 1:6021:6059  \"allowance(owner, spender) + addedValue\" */ value0_2, checked_add_uint256(/** @src 0:122:581  \"contract DBPaymentToken is ERC20 {...\" */ sload(keccak256(_4, _2)), calldataload(36)))\n                        let memPos_4 := mload(_2)\n                        mstore(memPos_4, 1)\n                        return(memPos_4, 32)\n                    }\n                    case 0x40c10f19 {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), _2) { revert(_4, _4) }\n                        let value0_3 := abi_decode_address_5566()\n                        let value_2 := calldataload(36)\n                        let _11 := and(/** @src 1:8603:8624  \"account != address(0)\" */ value0_3, /** @src 0:122:581  \"contract DBPaymentToken is ERC20 {...\" */ sub(shl(160, 1), 1))\n                        if /** @src 1:8603:8624  \"account != address(0)\" */ iszero(/** @src 0:122:581  \"contract DBPaymentToken is ERC20 {...\" */ _11)\n                        {\n                            let memPtr_1 := mload(_2)\n                            mstore(memPtr_1, shl(229, 4594637))\n                            mstore(add(memPtr_1, _3), 32)\n                            mstore(add(memPtr_1, 36), 31)\n                            mstore(add(memPtr_1, 68), \"ERC20: mint to the zero address\")\n                            revert(memPtr_1, 100)\n                        }\n                        sstore(/** @src 1:8731:8753  \"_totalSupply += amount\" */ 0x02, checked_add_uint256(/** @src 0:122:581  \"contract DBPaymentToken is ERC20 {...\" */ sload(/** @src 1:8731:8753  \"_totalSupply += amount\" */ 0x02), value_2))\n                        /// @src 0:122:581  \"contract DBPaymentToken is ERC20 {...\"\n                        mstore(_4, _11)\n                        mstore(32, _4)\n                        let dataSlot := keccak256(_4, _2)\n                        sstore(dataSlot, add(sload(/** @src 1:8899:8927  \"_balances[account] += amount\" */ dataSlot), /** @src 0:122:581  \"contract DBPaymentToken is ERC20 {...\" */ value_2))\n                        /// @src 1:8952:8989  \"Transfer(address(0), account, amount)\"\n                        let _12 := /** @src 0:122:581  \"contract DBPaymentToken is ERC20 {...\" */ mload(_2)\n                        mstore(_12, value_2)\n                        /// @src 1:8952:8989  \"Transfer(address(0), account, amount)\"\n                        log3(_12, /** @src 0:122:581  \"contract DBPaymentToken is ERC20 {...\" */ 32, /** @src 1:8952:8989  \"Transfer(address(0), account, amount)\" */ 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef, /** @src 0:122:581  \"contract DBPaymentToken is ERC20 {...\" */ _4, /** @src 1:8952:8989  \"Transfer(address(0), account, amount)\" */ _11)\n                        /// @src 0:122:581  \"contract DBPaymentToken is ERC20 {...\"\n                        let memPos_5 := mload(_2)\n                        mstore(memPos_5, 1)\n                        return(memPos_5, 32)\n                    }\n                    case 0x70a08231 {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(_4, _4) }\n                        mstore(_4, and(abi_decode_address_5566(), sub(shl(160, 1), 1)))\n                        mstore(32, _4)\n                        let _13 := sload(keccak256(_4, _2))\n                        let memPos_6 := mload(_2)\n                        mstore(memPos_6, _13)\n                        return(memPos_6, 32)\n                    }\n                    case 0x95d89b41 {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                        let memPtr_2 := mload(_2)\n                        let ret_1 := _4\n                        let slotValue_1 := sload(_3)\n                        let length_1 := _4\n                        let _14 := 1\n                        length_1 := shr(_14, slotValue_1)\n                        let outOfPlaceEncoding_1 := and(slotValue_1, _14)\n                        if iszero(outOfPlaceEncoding_1)\n                        {\n                            length_1 := and(length_1, 0x7f)\n                        }\n                        let _15 := 32\n                        if eq(outOfPlaceEncoding_1, lt(length_1, _15))\n                        {\n                            mstore(_4, shl(224, 0x4e487b71))\n                            mstore(_3, 0x22)\n                            revert(_4, 0x24)\n                        }\n                        mstore(memPtr_2, length_1)\n                        switch outOfPlaceEncoding_1\n                        case 0 {\n                            mstore(add(memPtr_2, _15), and(slotValue_1, not(255)))\n                            ret_1 := add(add(memPtr_2, shl(5, iszero(iszero(length_1)))), _15)\n                        }\n                        case 1 {\n                            mstore(_4, _3)\n                            let dataPos_1 := 62514009886607029107290561805838585334079798074568712924583230797734656856475\n                            let i_1 := _4\n                            for { } lt(i_1, length_1) { i_1 := add(i_1, _15) }\n                            {\n                                mstore(add(add(memPtr_2, i_1), _15), sload(dataPos_1))\n                                dataPos_1 := add(dataPos_1, _14)\n                            }\n                            ret_1 := add(add(memPtr_2, i_1), _15)\n                        }\n                        let newFreePtr_1 := add(memPtr_2, and(add(sub(ret_1, memPtr_2), 31), not(31)))\n                        if or(gt(newFreePtr_1, 0xffffffffffffffff), lt(newFreePtr_1, memPtr_2))\n                        {\n                            mstore(_4, shl(224, 0x4e487b71))\n                            mstore(_3, 0x41)\n                            revert(_4, 0x24)\n                        }\n                        mstore(_2, newFreePtr_1)\n                        return(newFreePtr_1, sub(abi_encode_string(newFreePtr_1, memPtr_2), newFreePtr_1))\n                    }\n                    case 0xa457c2d7 {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), _2) { revert(_4, _4) }\n                        let value0_4 := abi_decode_address_5566()\n                        let value_3 := calldataload(36)\n                        mstore(_4, /** @src 4:719:729  \"msg.sender\" */ caller())\n                        /// @src 0:122:581  \"contract DBPaymentToken is ERC20 {...\"\n                        mstore(32, 1)\n                        let _16 := keccak256(_4, _2)\n                        mstore(_4, and(value0_4, sub(shl(160, 1), 1)))\n                        mstore(32, _16)\n                        let _17 := sload(keccak256(_4, _2))\n                        if /** @src 1:6792:6827  \"currentAllowance >= subtractedValue\" */ lt(_17, value_3)\n                        /// @src 0:122:581  \"contract DBPaymentToken is ERC20 {...\"\n                        {\n                            let memPtr_3 := mload(_2)\n                            mstore(memPtr_3, shl(229, 4594637))\n                            mstore(add(memPtr_3, _3), 32)\n                            mstore(add(memPtr_3, 36), 37)\n                            mstore(add(memPtr_3, 68), \"ERC20: decreased allowance below\")\n                            mstore(add(memPtr_3, 100), \" zero\")\n                            revert(memPtr_3, 132)\n                        }\n                        /// @src 1:6928:6962  \"currentAllowance - subtractedValue\"\n                        fun_approve(/** @src 4:719:729  \"msg.sender\" */ caller(), /** @src 1:6928:6962  \"currentAllowance - subtractedValue\" */ value0_4, /** @src 0:122:581  \"contract DBPaymentToken is ERC20 {...\" */ sub(/** @src 1:6928:6962  \"currentAllowance - subtractedValue\" */ _17, value_3))\n                        /// @src 0:122:581  \"contract DBPaymentToken is ERC20 {...\"\n                        let memPos_7 := mload(_2)\n                        mstore(memPos_7, 1)\n                        return(memPos_7, 32)\n                    }\n                    case 0xa9059cbb {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), _2) { revert(_4, _4) }\n                        let value0_5 := abi_decode_address_5566()\n                        /// @src 1:3894:3900  \"amount\"\n                        fun_transfer(/** @src 4:719:729  \"msg.sender\" */ caller(), /** @src 1:3894:3900  \"amount\" */ value0_5, /** @src 0:122:581  \"contract DBPaymentToken is ERC20 {...\" */ calldataload(36))\n                        let memPos_8 := mload(_2)\n                        mstore(memPos_8, 1)\n                        return(memPos_8, 32)\n                    }\n                    case 0xdd62ed3e {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), _2) { revert(_4, _4) }\n                        let value0_6 := abi_decode_address_5566()\n                        let value1_1 := abi_decode_address()\n                        let _18 := sub(shl(160, 1), 1)\n                        mstore(_4, and(value0_6, _18))\n                        mstore(32, /** @src 1:4102:4113  \"_allowances\" */ 0x01)\n                        /// @src 0:122:581  \"contract DBPaymentToken is ERC20 {...\"\n                        let _19 := keccak256(_4, _2)\n                        mstore(_4, and(value1_1, _18))\n                        mstore(32, _19)\n                        let _20 := sload(keccak256(_4, _2))\n                        let memPos_9 := mload(_2)\n                        mstore(memPos_9, _20)\n                        return(memPos_9, 32)\n                    }\n                }\n                revert(0, 0)\n            }\n            function abi_encode_string(headStart, value0) -> tail\n            {\n                let _1 := 32\n                mstore(headStart, _1)\n                let length := mload(value0)\n                mstore(add(headStart, _1), length)\n                let i := 0\n                for { } lt(i, length) { i := add(i, _1) }\n                {\n                    mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n                }\n                mstore(add(add(headStart, length), 64), 0)\n                tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n            }\n            function abi_decode_address_5566() -> value\n            {\n                value := calldataload(4)\n                if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n            }\n            function abi_decode_address() -> value\n            {\n                value := calldataload(36)\n                if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n            }\n            function checked_add_uint256(x, y) -> sum\n            {\n                sum := add(x, y)\n                if gt(x, sum)\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x11)\n                    revert(0, 0x24)\n                }\n            }\n            /// @ast-id 398 @src 1:7456:8244  \"function _transfer(address from, address to, uint256 amount) internal virtual {...\"\n            function fun_transfer(var_from, var_to, var_amount)\n            {\n                /// @src 0:122:581  \"contract DBPaymentToken is ERC20 {...\"\n                let _1 := sub(shl(160, 1), 1)\n                let _2 := and(/** @src 1:7552:7570  \"from != address(0)\" */ var_from, /** @src 0:122:581  \"contract DBPaymentToken is ERC20 {...\" */ _1)\n                if /** @src 1:7552:7570  \"from != address(0)\" */ iszero(/** @src 0:122:581  \"contract DBPaymentToken is ERC20 {...\" */ _2)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 37)\n                    mstore(add(memPtr, 68), \"ERC20: transfer from the zero ad\")\n                    mstore(add(memPtr, 100), \"dress\")\n                    revert(memPtr, 132)\n                }\n                let _3 := and(/** @src 1:7630:7646  \"to != address(0)\" */ var_to, /** @src 0:122:581  \"contract DBPaymentToken is ERC20 {...\" */ _1)\n                if /** @src 1:7630:7646  \"to != address(0)\" */ iszero(/** @src 0:122:581  \"contract DBPaymentToken is ERC20 {...\" */ _3)\n                {\n                    let memPtr_1 := mload(64)\n                    mstore(memPtr_1, shl(229, 4594637))\n                    mstore(add(memPtr_1, 4), 32)\n                    mstore(add(memPtr_1, 36), 35)\n                    mstore(add(memPtr_1, 68), \"ERC20: transfer to the zero addr\")\n                    mstore(add(memPtr_1, 100), \"ess\")\n                    revert(memPtr_1, 132)\n                }\n                /// @src 1:7568:7569  \"0\"\n                let _4 := 0x00\n                /// @src 0:122:581  \"contract DBPaymentToken is ERC20 {...\"\n                mstore(/** @src 1:7568:7569  \"0\" */ _4, /** @src 0:122:581  \"contract DBPaymentToken is ERC20 {...\" */ _2)\n                mstore(0x20, /** @src 1:7568:7569  \"0\" */ _4)\n                /// @src 0:122:581  \"contract DBPaymentToken is ERC20 {...\"\n                let _5 := sload(keccak256(/** @src 1:7568:7569  \"0\" */ _4, /** @src 0:122:581  \"contract DBPaymentToken is ERC20 {...\" */ 0x40))\n                if /** @src 1:7801:7822  \"fromBalance >= amount\" */ lt(_5, var_amount)\n                /// @src 0:122:581  \"contract DBPaymentToken is ERC20 {...\"\n                {\n                    let memPtr_2 := mload(0x40)\n                    mstore(memPtr_2, shl(229, 4594637))\n                    mstore(add(memPtr_2, 4), 0x20)\n                    mstore(add(memPtr_2, 36), 38)\n                    mstore(add(memPtr_2, 68), \"ERC20: transfer amount exceeds b\")\n                    mstore(add(memPtr_2, 100), \"alance\")\n                    revert(memPtr_2, 132)\n                }\n                mstore(/** @src 1:7568:7569  \"0\" */ _4, /** @src 0:122:581  \"contract DBPaymentToken is ERC20 {...\" */ _2)\n                mstore(0x20, /** @src 1:7568:7569  \"0\" */ _4)\n                /// @src 0:122:581  \"contract DBPaymentToken is ERC20 {...\"\n                sstore(keccak256(/** @src 1:7568:7569  \"0\" */ _4, /** @src 0:122:581  \"contract DBPaymentToken is ERC20 {...\" */ 0x40), sub(/** @src 1:7917:7937  \"fromBalance - amount\" */ _5, var_amount))\n                /// @src 0:122:581  \"contract DBPaymentToken is ERC20 {...\"\n                mstore(/** @src 1:7568:7569  \"0\" */ _4, /** @src 0:122:581  \"contract DBPaymentToken is ERC20 {...\" */ _3)\n                let dataSlot := keccak256(/** @src 1:7568:7569  \"0\" */ _4, /** @src 0:122:581  \"contract DBPaymentToken is ERC20 {...\" */ 0x40)\n                sstore(dataSlot, add(sload(/** @src 1:8114:8137  \"_balances[to] += amount\" */ dataSlot), /** @src 0:122:581  \"contract DBPaymentToken is ERC20 {...\" */ var_amount))\n                /// @src 1:8163:8189  \"Transfer(from, to, amount)\"\n                let _6 := /** @src 0:122:581  \"contract DBPaymentToken is ERC20 {...\" */ mload(0x40)\n                mstore(_6, var_amount)\n                /// @src 1:8163:8189  \"Transfer(from, to, amount)\"\n                log3(_6, /** @src 0:122:581  \"contract DBPaymentToken is ERC20 {...\" */ 0x20, /** @src 1:8163:8189  \"Transfer(from, to, amount)\" */ 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef, _2, _3)\n            }\n            /// @ast-id 572 @src 1:10457:10797  \"function _approve(address owner, address spender, uint256 amount) internal virtual {...\"\n            function fun_approve(var_owner, var_spender, var_amount)\n            {\n                /// @src 0:122:581  \"contract DBPaymentToken is ERC20 {...\"\n                let _1 := sub(shl(160, 1), 1)\n                let _2 := and(/** @src 1:10558:10577  \"owner != address(0)\" */ var_owner, /** @src 0:122:581  \"contract DBPaymentToken is ERC20 {...\" */ _1)\n                if /** @src 1:10558:10577  \"owner != address(0)\" */ iszero(/** @src 0:122:581  \"contract DBPaymentToken is ERC20 {...\" */ _2)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 36)\n                    mstore(add(memPtr, 68), \"ERC20: approve from the zero add\")\n                    mstore(add(memPtr, 100), \"ress\")\n                    revert(memPtr, 132)\n                }\n                let _3 := and(/** @src 1:10636:10657  \"spender != address(0)\" */ var_spender, /** @src 0:122:581  \"contract DBPaymentToken is ERC20 {...\" */ _1)\n                if /** @src 1:10636:10657  \"spender != address(0)\" */ iszero(/** @src 0:122:581  \"contract DBPaymentToken is ERC20 {...\" */ _3)\n                {\n                    let memPtr_1 := mload(64)\n                    mstore(memPtr_1, shl(229, 4594637))\n                    mstore(add(memPtr_1, 4), 32)\n                    mstore(add(memPtr_1, 36), 34)\n                    mstore(add(memPtr_1, 68), \"ERC20: approve to the zero addre\")\n                    mstore(add(memPtr_1, 100), \"ss\")\n                    revert(memPtr_1, 132)\n                }\n                mstore(/** @src 1:10575:10576  \"0\" */ 0x00, /** @src 0:122:581  \"contract DBPaymentToken is ERC20 {...\" */ _2)\n                mstore(0x20, /** @src 1:10707:10718  \"_allowances\" */ 0x01)\n                /// @src 0:122:581  \"contract DBPaymentToken is ERC20 {...\"\n                let _4 := keccak256(/** @src 1:10575:10576  \"0\" */ 0x00, /** @src 0:122:581  \"contract DBPaymentToken is ERC20 {...\" */ 0x40)\n                mstore(/** @src 1:10575:10576  \"0\" */ 0x00, /** @src 0:122:581  \"contract DBPaymentToken is ERC20 {...\" */ _3)\n                mstore(0x20, _4)\n                sstore(keccak256(/** @src 1:10575:10576  \"0\" */ 0x00, /** @src 0:122:581  \"contract DBPaymentToken is ERC20 {...\" */ 0x40), var_amount)\n                /// @src 1:10758:10790  \"Approval(owner, spender, amount)\"\n                let _5 := /** @src 0:122:581  \"contract DBPaymentToken is ERC20 {...\" */ mload(0x40)\n                mstore(_5, var_amount)\n                /// @src 1:10758:10790  \"Approval(owner, spender, amount)\"\n                log3(_5, /** @src 0:122:581  \"contract DBPaymentToken is ERC20 {...\" */ 0x20, /** @src 1:10758:10790  \"Approval(owner, spender, amount)\" */ 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925, _2, _3)\n            }\n        }\n        data \".metadata\" hex\"a26469706673582212209c104a0f9ff76ef48a3651428460b78dbf6ad429d88d31fc4f48f0974a8d8bde64736f6c63430008130033\"\n    }\n}\n",
    "hash": "010001cbde61be0ccae0208f1bbc3c8569f3ad5293c652db36e984d2059ecbda",
    "factoryDependencies": {}
  }
})